/*
 * Copyright (c) 2014 Hayaki Saito
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#ifndef LIBSIXEL_SIXEL_IMAGEIO_H
#define LIBSIXEL_SIXEL_IMAGEIO_H

/* loader API */

enum imageFormat {
    FORMAT_GIF   =  0, /* read only */
    FORMAT_PNG   =  1, /* read/write */
    FORMAT_BMP   =  2, /* read only */
    FORMAT_JPG   =  3, /* read only */
    FORMAT_TGA   =  4, /* read only */
    FORMAT_WBMP  =  5, /* read only with --with-gd configure option */
    FORMAT_TIFF  =  6, /* read only */
    FORMAT_SIXEL =  7, /* read only */
    FORMAT_PNM   =  8, /* read only */
    FORMAT_GD2   =  9, /* read only with --with-gd configure option */
    FORMAT_PSD   = 10, /* read only */
    FORMAT_HDR   = 11, /* read only */
};

#ifdef __cplusplus
extern "C" {
#endif

/* load image from file */
int
sixel_helper_load_image_file(
    unsigned char /* out */ **ppixels,     /* loaded pixel data */
    unsigned char /* out */ **ppalette,    /* loaded palette data */
    int           /* out */ *psx,          /* image width */
    int           /* out */ *psy,          /* image height */
    int           /* out */ *pncolors,     /* palette colors */
    int           /* out */ *ppixelformat, /* one of enum pixelFormat */
    int           /* out */ *pframe_count, /* frame count */
    int           /* out */ *ploop_count,  /* loop count */
    int           /* out */ **ppdelay,     /* delay for each frames */
    char const    /* in */  *filename,     /* source file name */
    int           /* in */  fstatic,       /* whether to extract static image */
    int           /* in */  reqcolors,     /* requested number of colors */
    unsigned char /* in */  *bgcolor);     /* background color */

/* write image to file */
int
sixel_helper_write_image_file(
    unsigned char  /* in */ *data,        /* source pixel data */
    int            /* in */ width,        /* source data width */
    int            /* in */ height,       /* source data height */
    unsigned char  /* in */ *palette,     /* palette of source data */
    int            /* in */ pixelformat,  /* source pixelFormat */
    char const     /* in */ *filename,    /* destination filename */
    int            /* in */ imageformat); /* one of enum imageformat */

#ifdef __cplusplus
}
#endif

#endif  /* LIBSIXEL_SIXEL_IMAGEIO_H */

/* emacs, -*- Mode: C; tab-width: 4; indent-tabs-mode: nil -*- */
/* vim: set expandtab ts=4 : */
/* EOF */
